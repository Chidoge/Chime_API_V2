{
    "swagger": "2.0",
    "info": {
      "description": "Swagger UI for the Chime API",
      "version": "1.0.0",
      "title": "Swagger - Chime"
    },
    "host": "chime-api-v2.herokuapp.com",
    "basePath": "",
    "tags": [
      {
        "name": "auth",
        "description": "Related to user logins"
      },
      {
        "name": "profile",
        "description": "Access to registered users' profiles"
      },
      {
        "name": "user",
        "description": "Operations about user"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Registers a new user",
          "description": "",
          "operationId": "registerUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that defines the user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Existing username"
            },
            "500": {
              "description": "Internal server error"
            }            
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Signs user in and updates their activity",
          "description": "",
          "operationId": "loginUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Username and password",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Auth object"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/AuthorizedUser"
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/profile": {
        "get": {
          "tags": [
            "profile"
          ],
          "summary": "Get profile",
          "description": "Returns profile of given username",
          "operationId": "getProfile",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "Username of profile that needs to be fetched",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "404": {
              "description": "Account not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "put": {
          "tags": [
            "profile"
          ],
          "summary": "Update profile",
          "description": "Updates profile for a user",
          "operationId": "updateProfile",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "New profile details and authentication details",
              "required": true,
              "schema": {
                "$ref": "#/definitions/ProfileAuth"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Returns users",
          "description": "Returns all currently registered users",
          "operationId": "getUserList",
          "produces": [
            "application/json"
          ],
          "parameters": [{
            "name": "username",
            "in": "query",
            "description": "Username of user fetching the list",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ListUser"
                }
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "summary": "Deletes account",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Username and password",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Auth object"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/APIResponse"
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/messages/fetch": {
        "post": {
          "tags": [
            "messages"
          ],
          "summary": "Fetches messages for a user",
          "description": "Fetches messages for a user",
          "operationId": "fetchMessages",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Fetch message configurations",
              "required": true,
              "schema": {
                "$ref": "#/definitions/FetchMessageConfig"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/FetchedMessage"
                }
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/messages/send": {
        "post": {
          "tags": [
            "messages"
          ],
          "summary": "Send message to a user",
          "description": "Send message from authenticated user to another user",
          "operationId": "sendMessage",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Message configurations",
              "required": true,
              "schema": {
                "$ref": "#/definitions/SendMessageConfig"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/APIResponse"
              }
            },
            "400": {
              "description": "Missing parameters"
            },
            "403": {
              "description": "Authentication failed"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          }
        }
      },
      "ListUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "picture": {
            "type": "string",
            "example": "https://i.imgur.com/FSgbIi4.png"
          },
          "lastSeen": {
            "type": "integer",
            "example": "1565446365"
          }
        }
      },
      "Auth object": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          }
        }
      },
      "AuthorizedUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "picture": {
            "type": "string",
            "example": "https://i.imgur.com/FSgbIi4.png"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "occupation": {
            "type": "string",
            "example": "Student"
          },
          "picture": {
            "type": "string",
            "example": "https://i.imgur.com/FSgbIi4.png"
          },
          "about": {
            "type": "string",
            "example": "I like food."
          },
          "birthday": {
            "type": "string",
            "example": "12/12/1997"
          },
          "location": {
            "type": "string",
            "example": "Auckland"
          }
        }
      },
      "FetchedMessage": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "example": "rsvpmx"
          },
          "destination": {
            "type": "string",
            "example": "jsmith123"
          },
          "message": {
            "type": "string",
            "example": "Hi there."
          },
          "timestamp": {
            "type": "integer",
            "example": "1565446365"
          },
          "isImage": {
            "type": "integer",
            "example": "0"
          }
        }
      },
      "FetchMessageConfig": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "example": "rsvpmx"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          },
          "destination": {
            "type": "string",
            "example": "jsmith123"
          }
        }
      },
      "SendMessageConfig": {
        "type": "object",
        "properties": {
          "sender": {
            "type": "string",
            "example": "rsvpmx"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          },
          "destination": {
            "type": "string",
            "example": "jsmith123"
          },
          "message": {
            "type": "string",
            "example": "Hi there."
          },
          "isImage": {
            "type": "integer",
            "example": "0"
          }
        }
      },
      "ProfileAuth": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          },
          "occupation": {
            "type": "string",
            "example": "Student"
          },
          "picture": {
            "type": "string",
            "example": "--needs to be a base64 string--"
          },
          "about": {
            "type": "string",
            "example": "I like food."
          },
          "birthday": {
            "type": "string",
            "example": "12/12/1997"
          },
          "location": {
            "type": "string",
            "example": "Auckland"
          }
        }
      },
      "APIResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": "0"
          }
        }
      }
    }
  }