{
    "swagger": "2.0",
    "info": {
      "description": "Swagger UI for Chime - MSA phase 2",
      "version": "1.0.0",
      "title": "Swagger - Chime",
      "contact": {
        "email": "lincoln.choy1997@gmail.com"
      }
    },
    "host": "chimemsa.azurewebsites.net",
    "basePath": "",
    "tags": [
      {
        "name": "auth",
        "description": "Related to user logins"
      },
      {
        "name": "profile",
        "description": "Access to registered users' profiles"
      },
      {
        "name": "user",
        "description": "Operations about user"
      }
    ],
    "schemes": [
      "https",
      "http"
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Registers a new user",
          "description": "",
          "operationId": "registerUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that defines the user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "auth"
          ],
          "summary": "Signs user in and updates their activity",
          "description": "",
          "operationId": "loginUser",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Username and password",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Auth object"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          }
        }
      },
      "/profile": {
        "get": {
          "tags": [
            "profile"
          ],
          "summary": "Get profile",
          "description": "Returns profile of given username",
          "operationId": "getProfile",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "Username of profile that needs to be fetched",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "$ref": "#/definitions/Profile"
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          }
        }
      },
      "/users": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Returns users",
          "description": "Returns all currently registered users",
          "operationId": "getUserList",
          "produces": [
            "application/json"
          ],
          "parameters": [{
            "name": "username",
            "in": "query",
            "description": "Username of user fetching the list",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Success",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ListUser"
                }
              }
            }
          }
        }
      },
      "/store/order/{orderId}": {
        "get": {
          "tags": [
            "store"
          ],
          "summary": "Find purchase order by ID",
          "description": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
          "operationId": "getOrderById",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of pet that needs to be fetched",
              "required": true,
              "type": "integer",
              "maximum": 10,
              "minimum": 1,
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Order not found"
            }
          }
        },
        "delete": {
          "tags": [
            "store"
          ],
          "summary": "Delete purchase order by ID",
          "description": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
          "operationId": "deleteOrder",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "name": "orderId",
              "in": "path",
              "description": "ID of the order that needs to be deleted",
              "required": true,
              "type": "integer",
              "minimum": 1,
              "format": "int64"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Order not found"
            }
          }
        }
      },
      "/user": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Created user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/createWithArray": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Creates list of users with given input array",
          "description": "",
          "operationId": "createUsersWithArrayInput",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "List of user object",
              "required": true,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/createWithList": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "Creates list of users with given input array",
          "description": "",
          "operationId": "createUsersWithListInput",
          "produces": [
            "application/xml",
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "List of user object",
              "required": true,
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          ],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "password": {
            "type": "string",
            "example": "secret123"
          }
        }
      },
      "ListUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "picture": {
            "type": "string",
            "example": "https://i.imgur.com/FSgbIi4.png"
          },
          "lastSeen": {
            "type": "integer",
            "example": "1565446365"
          }
        }
      },
      "Auth object": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "password": {
            "type": "string",
            "password": "secret123"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "rsvpmx"
          },
          "first": {
            "type": "string",
            "example": "John"
          },
          "last": {
            "type": "string",
            "example": "Smith"
          },
          "picture": {
            "type": "string",
            "example": "https://i.imgur.com/FSgbIi4.png"
          },
          "about": {
            "type": "string",
            "example": "I like food."
          },
          "birthday": {
            "type": "string",
            "example": "12/12/1997"
          },
          "location": {
            "type": "string",
            "example": "Auckland"
          }
        }
      }
    }
  }